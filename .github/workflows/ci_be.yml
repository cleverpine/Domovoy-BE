name: Backend CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - '*'

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js (use Node.js 18 for structuredClone support)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Ensure Node.js version >=17
          cache: 'npm'

      # Install dependencies
      - name: Install project dependencies
        run: npm install

      # Install ESLint temporarily for linting
      - name: Install ESLint
        run: npm install eslint

      # Dynamically create ESLint flat configuration with .mjs extension
      - name: Create ESLint config
        run: |
          echo "export default [
            {
              files: ['**/*.js'],
              languageOptions: {
                globals: {
                  require: true,
                  process: true,
                  module: true,
                  __dirname: true,
                },
              },
              rules: {
                'no-unused-vars': 'warn',
                'no-undef': 'error',
                'semi': ['error', 'always'],
              },
            },
          ];" > eslint.config.mjs

      # Run Linting
      - name: Run linting
        run: npx eslint --config eslint.config.mjs .

      # Install Jest temporarily for testing
      - name: Install Jest
        run: npm install jest supertest --save-dev

      # Create a basic Jest configuration
      - name: Create Jest config
        run: |
          echo "module.exports = { testEnvironment: 'node' };" > jest.config.js

      # Run Unit Tests
      - name: Run unit tests
        run: npx jest --coverage

      # Optional: Upload Jest coverage reports (if needed)
      - name: Upload test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/
