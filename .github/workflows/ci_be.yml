  name: Backend CI

  on:
    push:
      branches:
        - main
        - develop
        - cicd/workflow-for-deploy
    workflow_dispatch:  # Allows manual triggering of the workflow


  jobs:
    backend:
      runs-on: ubuntu-latest
      env:
        REGISTRY: cleverpine.azurecr.io
        IMAGE_REPOSITORY: ${{ github.repository }}
        BUILD_DIR: ./build
        KUBE_NAMESPACE: domovoy2-dev
        RELEASE_NAME: domovoy2-service-dev
        

      steps:
        # Checkout the code
        - name: Checkout code
          uses: actions/checkout@v3

        # Set up Node.js (use Node.js 18 for structuredClone support)
        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 18 # Ensure Node.js version >=17
            cache: 'npm'

        # Install dependencies
        - name: Install project dependencies
          run: npm install

        # # Run linting using the existing eslint.config.mjs
        # - name: Run linting
        #   run: npx eslint . --config eslint.config.mjs

        # # Install Jest temporarily for testing
        # - name: Install Jest
        #   run: npm install jest supertest --save-dev

        # # Create a basic Jest configuration
        # - name: Create Jest config
        #   run: |
        #     echo "module.exports = { testEnvironment: 'node' };" > jest.config.js

        # # Run Unit Tests
        # # - name: Run unit tests
        # #   run: npx jest --coverage

        # # Optional: Upload Jest coverage reports (if needed)
        # - name: Upload test coverage report
        #   uses: actions/upload-artifact@v3
        #   with:
        #     name: coverage-report
        #     path: coverage/


        - name: Log in to Azure Container Registry
          uses: azure/docker-login@v2
          with:
            login-server: ${{ env.REGISTRY }}
            username: ${{ secrets.SP_ACR_AKS_USERNAME }}
            password: ${{ secrets.SP_ACR_AKS_PASSWORD }}

        - name: Set date-based tag
          id: set-tag
          run: |
            YEAR=$(date +'%Y')
            MONTH=$(date +'%m')
            DAY=$(date +'%d')
            TAG="$YEAR$MONTH$DAY.${{ github.run_number }}"
            echo "TAG=$TAG" >> $GITHUB_ENV

        - name: Build and push Docker image
          uses: docker/build-push-action@v4
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ env.REGISTRY }}/domovoy2-service:${{ env.TAG }}

        - name: Package Helm chart
          run: |
            mkdir -p ${{ env.BUILD_DIR }}
            helm package ./chart --destination ${{ env.BUILD_DIR }}

        - name: Copy additional files
          run: |
            cp ./chart/values.*.yaml ${{ env.BUILD_DIR }}/
            cp ./chart/env-vars.yaml ${{ env.BUILD_DIR }}/ 

        - name: Set environment variables from secrets
          run: |
            echo -n '${{ secrets.ENV_VARS_HELM_DOMOVOY_BE }}' > ./build/env-vars.yaml

        - name: Upload build artifact
          uses: actions/upload-artifact@v3
          with:
            name: drop
            path: ${{ env.BUILD_DIR }}

        - name: Log in to Azure
          uses: azure/login@v2
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
         

        - name: Configure AKS context
          uses: azure/aks-set-context@v4
          with:
              resource-group: internal-development
              cluster-name: internal-development-aks

        - name: Deploy Helm chart
          run: |
            helm upgrade --install ${{ env.RELEASE_NAME }} ./build/domovoy2-service-0.1.0.tgz \
              --namespace ${{ env.KUBE_NAMESPACE }} \
              -f ./build/chart/values.yaml \
              -f ./build/chart/values.dev.yaml \
              -f ./build/env-vars.yaml \
              --set image.tag=${{ env.TAG }}
            
    
